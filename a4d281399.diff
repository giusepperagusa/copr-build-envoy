commit a4d2813997fd9ac279c6f30e48e5024893d01d8f
Author: Vincent Batts <vbatts@hashbangbash.com>
Date:   Tue May 1 11:08:36 2018 -0400

    common/network: silence gcc 8 memcpy warning
    
    ```
    source/common/network/address_impl.cc: In member function 'virtual absl::uint128 Envoy::Network::Address::Ipv6Instance::Ipv6Helper::address() const':
    source/common/network/address_impl.cc:188:69: error: 'void* memcpy(void*, const void*, size_t)' copying an object of type 'class absl::uint128' with 'private' member 'absl::uint128::lo_' from an array of 'const uint8_t [16]' {aka 'const unsigned char [16]'}; use assignment or copy-initialization instead [-Werror=class-memaccess]
       memcpy(&result, &address_.sin6_addr.s6_addr, sizeof(absl::uint128));
                                                                         ^
    In file included from bazel-out/k8-opt/bin/include/envoy/network/_virtual_includes/address_interface/envoy/network/address.h:13,
                     from bazel-out/k8-opt/bin/source/common/network/_virtual_includes/address_lib/common/network/address_impl.h:12,
                     from source/common/network/address_impl.cc:1:
    external/com_google_absl/absl/numeric/int128.h:81:19: note: 'class absl::uint128' declared here
     class alignas(16) uint128 {
                       ^~~~~~~
    cc1plus: all warnings being treated as errors
    Target //source/exe:envoy-static failed to build
    ```

diff --git a/source/common/network/address_impl.cc b/source/common/network/address_impl.cc
index 155dbfa16..9d3214507 100644
--- a/source/common/network/address_impl.cc
+++ b/source/common/network/address_impl.cc
@@ -185,7 +185,8 @@ int Ipv4Instance::socket(SocketType type) const { return socketFromSocketType(ty
 absl::uint128 Ipv6Instance::Ipv6Helper::address() const {
   absl::uint128 result{0};
   static_assert(sizeof(absl::uint128) == 16, "The size of asbl::uint128 is not 16.");
-  memcpy(&result, &address_.sin6_addr.s6_addr, sizeof(absl::uint128));
+  memcpy(static_cast<void *>(&result),
+         static_cast<const void *>(&address_.sin6_addr.s6_addr), sizeof(absl::uint128));
   return result;
 }
 
